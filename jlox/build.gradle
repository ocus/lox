apply plugin: 'idea'
apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'jacoco'

sourceSets {
    tool
}

repositories {
    mavenCentral()
}

dependencies {
    testCompile 'junit:junit:4.12'
    testCompile 'org.slf4j:slf4j-simple:1.6.1'
}

mainClassName = 'fr.ocus.lox.jlox.JLox'
jar {
    manifest {
        attributes(
                'Class-Path': configurations.compile.collect { it.getName() }.join(' '),
                'Main-Class': mainClassName
        )
    }
}

run {
    standardInput = System.in
    standardOutput = System.out
}

test.finalizedBy jacocoTestReport
jacocoTestReport {
    afterEvaluate {
        classDirectories = files(classDirectories.files.collect {
            fileTree(dir: it, exclude: ['**/Ast*Printer.*', '**/SourceHilighter.*'])
        })
    }
}

// TODO: use startScripts from application plugin ?

//noinspection GroovyAssignabilityCheck
task jlox(group: 'jlox', type: JavaExec) {
    standardInput = System.in
    def arguments = []
    arguments.add(jar.archivePath)
    if (project.hasProperty("file")) {
        arguments.add(project.getProperty("file"))
    }
    main = '-jar'
    args = arguments
}
jlox.dependsOn jar

//noinspection GroovyAssignabilityCheck
task jloxAst(group: 'jlox', type: JavaExec) {
    standardInput = System.in
    def arguments = []
    arguments.add(jar.archivePath)
    arguments.add('fr.ocus.lox.jlox.AstPrinter')
    if (project.hasProperty("file")) {
        arguments.add(project.getProperty("file"))
    }
    main = '-cp'
    args = arguments
}
jloxAst.dependsOn jar

//noinspection GroovyAssignabilityCheck
task jloxHilight(group: 'jlox', type: JavaExec) {
    outputs.upToDateWhen { false }
    standardInput = System.in
    standardOutput = System.out
    def arguments = []
    arguments.add(jar.archivePath)
    arguments.add('fr.ocus.lox.jlox.SourceHilighter')
    if (project.hasProperty("file")) {
        arguments.add(project.getProperty("file"))
    }
    main = '-cp'
    args = arguments
}
jloxHilight.dependsOn jar

/**
 * Tool tasks
 **/

//noinspection GroovyAssignabilityCheck
task generateAst(group: 'tool', type: JavaExec) {
    main = 'fr.ocus.lox.tool.GenerateAst'
    classpath = sourceSets.tool.runtimeClasspath
    args = ['src/main/java/fr/ocus/lox/jlox']
}

//noinspection GroovyAssignabilityCheck
task generateInterpreterTests(group: 'tool', type: JavaExec) {
    main = 'fr.ocus.lox.tool.GenerateInterpreterTests'
    classpath = sourceSets.test.runtimeClasspath
    args = ['src/test/java/fr/ocus/lox/jlox']
}

import org.gradle.api.tasks.wrapper.Wrapper.DistributionType

task wrapper(type: Wrapper) {
    gradleVersion = '4.0'
    distributionType = DistributionType.ALL
}
